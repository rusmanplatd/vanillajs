import js from '@eslint/js';
import jsdocPlugin from 'eslint-plugin-jsdoc';
import prettierConfig from 'eslint-config-prettier';

export default [
  js.configs.recommended,
  prettierConfig,
  {
    languageOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
      globals: {
        // Browser globals
        window: 'readonly',
        document: 'readonly',
        navigator: 'readonly',
        console: 'readonly',
        localStorage: 'readonly',
        sessionStorage: 'readonly',
        fetch: 'readonly',
        FormData: 'readonly',
        Headers: 'readonly',
        Request: 'readonly',
        Response: 'readonly',
        URL: 'readonly',
        URLSearchParams: 'readonly',
        alert: 'readonly',
        setTimeout: 'readonly',
        setInterval: 'readonly',
        clearTimeout: 'readonly',
        clearInterval: 'readonly',
        Blob: 'readonly',
        getComputedStyle: 'readonly',
        MutationObserver: 'readonly',
        Node: 'readonly',
        NodeFilter: 'readonly',
        XMLHttpRequest: 'readonly',
        AbortController: 'readonly',
        RequestInit: 'readonly',
        // Node.js globals
        process: 'readonly',
        __dirname: 'readonly',
        __filename: 'readonly',
        module: 'readonly',
        require: 'readonly',
        exports: 'readonly',
        global: 'readonly',
        Buffer: 'readonly',
      },
    },
    plugins: {
      jsdoc: jsdocPlugin,
    },
    rules: {
      'no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],
      'no-console': 'off',
      'no-debugger': 'warn',
      'no-alert': 'warn',
      eqeqeq: ['error', 'always'],
      curly: ['error', 'all'],
      'no-var': 'error',
      'prefer-const': 'error',
      'prefer-arrow-callback': 'warn',
      'prefer-template': 'warn',
      'no-useless-concat': 'error',
      'no-duplicate-imports': 'error',
      'no-promise-executor-return': 'error',
      'require-await': 'warn',
      'no-return-await': 'error',
      'prefer-destructuring': [
        'warn',
        {
          array: false,
          object: true,
        },
      ],
      'no-shadow': 'warn',
      'no-shadow-restricted-names': 'error',
      'no-use-before-define': [
        'warn',
        { functions: false, classes: false, variables: false },
      ],
      'no-undef': 'error',
      'no-unused-expressions': [
        'error',
        { allowShortCircuit: true, allowTernary: true },
      ],
      'no-useless-return': 'warn',
      'no-else-return': ['warn', { allowElseIf: false }],
      'no-implicit-coercion': 'warn',
      'no-lonely-if': 'warn',
      'no-nested-ternary': 'warn',
      'no-unneeded-ternary': 'warn',
      'no-throw-literal': 'error',
      'no-eval': 'error',
      'no-implied-eval': 'error',
      'no-new-func': 'warn',
      'no-new-wrappers': 'error',
      'no-param-reassign': ['warn', { props: false }],
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-object-spread': 'warn',
      'prefer-promise-reject-errors': 'error',
      'prefer-exponentiation-operator': 'warn',
      'prefer-regex-literals': 'warn',
      'array-callback-return': 'error',
      'consistent-return': 'warn',
      'default-case': 'warn',
      'default-case-last': 'error',
      'dot-notation': 'warn',
      'guard-for-in': 'warn',
      'no-constructor-return': 'error',
      'no-empty-function': 'warn',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-floating-decimal': 'error',
      'no-loop-func': 'warn',
      'no-new': 'warn',
      'no-redeclare': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-useless-call': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-constructor': 'warn',
      'no-useless-rename': 'error',
      radix: 'error',
      yoda: 'error',
      'jsdoc/require-description': 'warn',
      'jsdoc/require-param-description': 'warn',
      'jsdoc/require-returns-description': 'warn',
      'jsdoc/require-jsdoc': [
        'warn',
        {
          require: {
            FunctionDeclaration: true,
            MethodDefinition: true,
            ClassDeclaration: true,
            ArrowFunctionExpression: false,
            FunctionExpression: false,
          },
          publicOnly: false,
          enableFixer: false,
        },
      ],
      'jsdoc/check-alignment': 'error',
      'jsdoc/check-param-names': 'error',
      'jsdoc/check-property-names': 'warn',
      'jsdoc/check-tag-names': 'error',
      'jsdoc/check-types': 'warn',
      'jsdoc/check-values': 'warn',
      'jsdoc/empty-tags': 'error',
      'jsdoc/implements-on-classes': 'warn',
      'jsdoc/no-bad-blocks': 'warn',
      'jsdoc/no-defaults': 'off',
      'jsdoc/no-multi-asterisks': ['warn', { allowWhitespace: true }],
      'jsdoc/require-asterisk-prefix': 'warn',
      'jsdoc/require-param': 'warn',
      'jsdoc/require-param-name': 'error',
      'jsdoc/require-param-type': 'error',
      'jsdoc/require-property': 'warn',
      'jsdoc/require-property-description': 'warn',
      'jsdoc/require-property-name': 'warn',
      'jsdoc/require-property-type': 'warn',
      'jsdoc/require-returns': 'warn',
      'jsdoc/require-returns-check': 'warn',
      'jsdoc/require-returns-type': 'error',
      'jsdoc/require-yields': 'warn',
      'jsdoc/require-yields-check': 'warn',
      'jsdoc/valid-types': 'error',
      'jsdoc/no-undefined-types': [
        'warn',
        {
          definedTypes: [
            'Observable',
            'Subscription',
            'Subject',
            'BehaviorSubject',
            'HTMLElement',
            'Element',
            'Node',
            'NodeList',
            'Event',
            'MouseEvent',
            'KeyboardEvent',
            'CustomEvent',
            'EventTarget',
            'MediaQueryList',
            'CSSStyleDeclaration',
            'Storage',
            'Promise',
            'Array',
            'Object',
            'Function',
            'RegExp',
            'Map',
            'Set',
            'WeakMap',
            'WeakSet',
            'AbortController',
            'RequestInit',
          ],
        },
      ],
      'jsdoc/require-hyphen-before-param-description': 'off',
    },
  },
  {
    ignores: [
      'node_modules/',
      'docs/',
      'packages/',
      '*.min.js',
      'dist/',
      'examples/',
    ],
  },
];
